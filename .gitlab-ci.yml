image: python:3

stages:
  - development
  - prepare
  - build
  - test
  - deploy

.local:
  engine: docker,auto
  real_paths: true
  sockets: true

'Changelog':
  stage: development
  image: local:silent
  script:
    - mkdir -p ./.tmp/
    - ls ./.tmp/git-chglog >/dev/null 2>&1 || wget -O ./.tmp/git-chglog -q https://github.com/git-chglog/git-chglog/releases/download/0.9.1/git-chglog_linux_amd64
    - chmod +x ./.tmp/git-chglog
    - 'echo -n " > Current commit : "'
    - git describe --always
    - echo ''
    - 'read -p " > Release tag : " -r tag'
    - echo ''
    - git tag -f -m '' "${tag}"
    - ./.tmp/git-chglog -o ./CHANGELOG.md
    - sed -i "s#raw/[^/]*/docs#raw/${tag}/docs#g" ./README.md
    - git add -v ./CHANGELOG.md ./README.md
    - 'git commit -m "docs: changelog: regenerate release tag changes history"'
    - git tag -f -m '' "${tag}"
    - ./.tmp/git-chglog -o ./CHANGELOG.md
    - git add -v ./CHANGELOG.md
    - git commit --amend --no-edit
    - git tag -f -m '' "${tag}"
  only:
    - local

'Dependencies':
  stage: development
  image: local:quiet
  script:
    - sudo pip3 install -r requirements/runtime.txt --upgrade
    - sudo pip3 install -r requirements/build.txt --upgrade
    - sudo pip3 install -r requirements/deploy.txt --upgrade
    - sudo pip3 install -r requirements/docs.txt --upgrade
    - sudo pip3 install -r requirements/quality.txt --upgrade
  only:
    - local

'Development':
  stage: development
  image: local:quiet
  script:
    - sudo rm -rf build dist *.egg-info .eggs
    - python3 setup.py bdist_wheel
    - sudo pip3 install --force-reinstall --no-deps --upgrade dist/*.whl
  only:
    - local

'Preview':
  stage: development
  image: local:silent
  script:
    - for i in $(seq 1 100); do echo ' '; done
    - sleep 3
    - python3 ./docs/preview.py
    - sleep 10
  only:
    - local

'Codestyle':
  stage: prepare
  variables:
    PIP_DISABLE_PIP_VERSION_CHECK: 1
  before_script:
    - pip3 install -q -r requirements/quality.txt --upgrade
  script:
    - yapf -i ./docs/*.py ./gitlabci_local/*.py ./gitlabci_local/*/*.py ./setup.py
    - unify -i --quote "'" ./docs/*.py ./gitlabci_local/*.py ./gitlabci_local/*/*.py ./setup.py
  after_script:
    - echo '' && git diff --name-status
    - git diff --quiet
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
        - 'docs/**/*'
        - 'gitlabci_local/**/*'
        - 'setup.py'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != "develop"
      when: on_success
  allow_failure: true

'Lint':
  stage: prepare
  variables:
    PIP_DISABLE_PIP_VERSION_CHECK: 1
  before_script:
    - pip3 install -q -r requirements/runtime.txt --upgrade
    - pip3 install -q -r requirements/docs.txt --upgrade
    - pip3 install -q -r requirements/quality.txt --upgrade
  script:
    - pylint --errors-only ./docs/ ./gitlabci_local/ ./setup.py
    - |
      pylint \
        --disable=bare-except \
        --disable=line-too-long \
        --disable=missing-docstring \
        --disable=no-self-use \
        --disable=too-few-public-methods \
        --disable=too-many-arguments \
        --disable=too-many-branches \
        --disable=too-many-locals \
        --disable=too-many-nested-blocks \
        --disable=too-many-statements \
        --redefining-builtins-modules=sys \
        ./docs/ ./gitlabci_local/ ./setup.py
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
        - 'docs/**/*'
        - 'gitlabci_local/**/*'
        - 'setup.py'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != "develop"
      when: on_success
  allow_failure: true

'SonarCloud':
  stage: prepare
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  variables:
    GIT_DEPTH: 0
    SONAR_USER_HOME: ${CI_PROJECT_DIR}/.sonar
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.projectVersion=$(git describe --always) -Dsonar.branch.name=${CI_COMMIT_REF_NAME}
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
        - 'docs/**/*'
        - 'gitlabci_local/**/*'
        - 'setup.py'
    - if: $CI_COMMIT_REF_NAME == "master"
      when: on_success
    - when: never
  allow_failure: true

'Build':
  stage: build
  variables:
    PIP_DISABLE_PIP_VERSION_CHECK: 1
  before_script:
    - pip3 install -r requirements/runtime.txt --upgrade
    - pip3 install -r requirements/build.txt --upgrade
  script:
    - rm -rf build dist *.egg-info .eggs
    - python3 setup.py bdist_wheel
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
        - 'gitlabci_local/**/*'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != "develop"
      when: on_success
  artifacts:
    paths:
      - dist/

'Test':
  stage: test
  image: local:silent
  script:
    - |
      if [ -z "${SUITE}" ]; then
        read -p " > Test suite [SUITE] : " -r SUITE
        echo ''
      fi
      sed -n '/^.unit-tests-template/,/^$/{ /  script/,/^$/{ /script:/n; s/^ *- //g; p } }' ./.gitlab-ci.yml | grep "/tests/${SUITE:?}" |
      while read -r line; do
        printf " \033[1;35mTest: \033[0;35m${line}\033[0m\n"
        bash -c "${line}"
      done
      printf " \033[1;35mTests: \033[0;35mPassed successfully\033[0m\n"
  only:
    - local

.unit-tests-docker:
  services:
    - docker:19.03.13-dind
  dependencies:
    - Build
  variables:
    DOCKER_DRIVER: overlay2
  before_script: &unit-tests-docker-before |-
    mount

.unit-tests-podman:
  dependencies:
    - Build
  variables:
    DOCKER_HOST: tcp://127.0.0.1:9999
  before_script: &unit-tests-podman-before |-
    mount
    echo 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/ /' >/etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/Release.key | apt-key add -
    wget -P /tmp/ http://ftp.br.debian.org/debian/pool/main/libs/libseccomp/libseccomp2_2.5.0-3+b1_amd64.deb
    apt update
    apt install -y /tmp/libseccomp2_2.5.0-3+b1_amd64.deb
    rm -f /tmp/libseccomp2_2.5.0-3+b1_amd64.deb
    apt install -y podman
    sed -i 's#.*cgroup_manager = ".*"#cgroup_manager = "cgroupfs"#g' /etc/containers/containers.conf
    sed -i 's#.*events_logger = ".*"#events_logger = "file"#g' /etc/containers/containers.conf
    sed -i 's#driver = ""#driver = "vfs"#g' /etc/containers/storage.conf

.unit-tests-rules:
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
        - 'gitlabci_local/**/*'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != "develop"
      when: on_success

.unit-tests-template:
  stage: test
  timeout: 10m
  variables:
    FORCE_STYLING: 'true'
    TEMP: .tmp
    TERM: ansi
  before_script: &unit-tests-template-before |-
    mkdir -p ./.tmp/
    pip install dist/*.whl
    pip install --force-reinstall --no-deps --upgrade dist/*.whl
    pip show gitlabci-local
  script:
    - pwd
    - mount
    - pip show gitlabci-local
    - gitlabci-local -h
    - gitlabci-local --version
    - gitlabci-local --update-check
    - CI_LOCAL_UPDATES_OFFLINE=true gitlabci-local --update-check
    - gitlabci-local -c unknown/.gitlab-ci.yml && exit 1 || true
    - gitlabci-local -c ./examples/.gitlab-ci.yml -d
    - gitlabci-local -c ./tests/simple/.gitlab-ci.yml </dev/null && exit 1 || true
    - gitlabci-local -c ./tests/simple/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/simple/.gitlab-ci.yml -q -p
    - gcil -c ./tests/simple/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/unsorted/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/unsorted/.gitlab-ci.yml --all </dev/null
    - gitlabci-local -c ./tests/templates/.gitlab-ci.yml 'Job 1' 'Job 2' 'Job 3'
    - gitlabci-local -B -A -c ./tests/templates/.gitlab-ci.yml 'Job 1' 'Job 2' 'Job 3'
    - gitlabci-local -c ./tests/failures/.gitlab-ci.yml -p && exit 1 || true
    - gitlabci-local -c ./tests/failures/.gitlab-ci.yml 'Job 1' 'Job 2'
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml unknown_job && exit 1 || true
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml -p unknown_stage && exit 1 || true
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml -p && exit 1 || true
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml -p one two
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml -s -p one two </dev/null
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -m -p && exit 1 || true
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -t upload -p && exit 1 || true
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -t publish -p
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -t deploy,publish -p
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -t deploy,local,publish -p
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml 'Job 3'
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -p three && exit 1 || true
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -m -p three
    - gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -p && exit 1 || true
    - gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -p </dev/null && exit 1 || true
    - VARIABLE_8=value8 gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -p </dev/null && exit 1 || true
    - VARIABLE_8= VARIABLE_11=value11 gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -p </dev/null
    - gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -e VARIABLE_8=value8 -e VARIABLE_11=value11 -p </dev/null
    - gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -e VARIABLE_8=value8 -e VARIABLE_11=value11 --defaults -p
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -e USER -e VALUE_1=set1 -e VALUE_2=set2 -e VALUE_3=set3 -p
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -e FOLDER="$(readlink -f "${PWD}")" -v ./ 'Job 2'
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -v ./:/opt 'Job 2'
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -v ./:/opt -w /opt/ 'Job 2'
    - gitlabci-local -c ./tests/entrypoints/.gitlab-ci.yml --pull
    - gitlabci-local -c ./tests/entrypoints/.gitlab-ci.yml --pull
    - gitlabci-local -c ./tests/entrypoints/.gitlab-ci.yml --rmi
    - gitlabci-local -c ./tests/entrypoints/.gitlab-ci.yml --rmi
    - gitlabci-local -c ./tests/entrypoints/.gitlab-ci.yml -d
    - gitlabci-local -c ./tests/entrypoints/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/variables/.gitlab-ci.yml -p && exit 1 || true
    - gitlabci-local -c ./tests/variables/.gitlab-ci.yml -e IMAGE_REFERENCE_1='alpine:3' -p && exit 1 || true
    - gitlabci-local -c ./tests/variables/.gitlab-ci.yml -e IMAGE_REFERENCE_1='alpine:3' -e IMAGE_REFERENCE_5='alpine:3' -p
    - gitlabci-local -c ./tests/project/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/project/.gitlab-ci.yml -H -p
    - gitlabci-local -c ./tests/project/.gitlab-ci.yml 'Job 2' && exit 1 || true
    - gitlabci-local -c ./tests/project/.gitlab-ci.yml -e CI_VARIABLE_DIR=. 'Job 2'
    - CI_VARIABLE_DIR=. gitlabci-local -c ./tests/project/.gitlab-ci.yml 'Job 2' && exit 1 || true
    - CI_VARIABLE_DIR=. gitlabci-local -c ./tests/project/.gitlab-ci.yml -e CI_VARIABLE_DIR 'Job 2'
    - gitlabci-local -c ./tests/project/.gitlab-ci.yml 'Job 3' && exit 1 || true
    - gitlabci-local -c ./tests/project/.gitlab-ci.yml -e CI_CONSTANT_PRE_DIR=. -e CI_CONSTANT_POST_DIR=. 'Job 3'
    - gitlabci-local -c ./tests/images/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/retry/.gitlab-ci.yml -p failure && exit 1 || true
    - gitlabci-local -c ./tests/retry/.gitlab-ci.yml -p success
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml 'Job 1'
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -p local_first
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -n bridge 'Job 2'
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -n host 'Job 2'
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -n none 'Job 2'
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -v ./tests/volumes:/opt/src:ro -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -v ./tests/volumes:/opt/src:ro -v ./tests/volumes:/opt/src:ro -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -v ./tests/local:/opt/src:ro -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -v ./tests/volumes:/opt/src3:ro -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -v ./tests/local:/opt/src:ro -v ./tests/volumes:/opt/src:ro -p && exit 1 || true
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -w . -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -r -w . -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -w ./tests/volumes/ -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -w /opt/src -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -w /opt/unknown -p
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml 'Job 2'
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -w . 'Job 2'
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -r 'Job 2'
    - gitlabci-local -c ./tests/volumes/.gitlab-ci.yml -r -w . 'Job 2'
    - gitlabci-local -c ./tests/includes/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/extends/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/multilines/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/disabled/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/triggers/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/regex/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/regex/.gitlab-ci.yml 'C'
    - gitlabci-local -c ./tests/regex/.gitlab-ci.yml 'C++'
    - gitlabci-local -c ./tests/regex/.gitlab-ci.yml 'Test'
    - gitlabci-local -c ./tests/regex/.gitlab-ci.yml 'C*'
    - gitlabci-local -c ./tests/regex/.gitlab-ci.yml 'C.*'
    - gitlabci-local -c ./tests/regex/.gitlab-ci.yml 'est .*'
    - timeout 5 gitlabci-local -c ./tests/simple/.gitlab-ci.yml 'Job 1' --bash && exit 1 || true
    - timeout 5 gitlabci-local -c ./tests/simple/.gitlab-ci.yml 'Job 1' --debug && exit 1 || true
    - gcil -c ./tests/simple/.gitlab-ci.yml Job
    - gcil -c ./tests/simple/.gitlab-ci.yml 1
    - gcil -c ./tests/simple/.gitlab-ci.yml 4 && exit 1 || true

'Py3.6 Docker':
  extends:
    - .unit-tests-template
    - .unit-tests-docker
    - .unit-tests-rules
  image: python:3.6
  before_script:
    - *unit-tests-docker-before
    - *unit-tests-template-before

'Py3.7 Docker':
  extends:
    - .unit-tests-template
    - .unit-tests-docker
    - .unit-tests-rules
  image: python:3.7
  before_script:
    - *unit-tests-docker-before
    - *unit-tests-template-before

'Py3.8 Docker':
  extends:
    - .unit-tests-template
    - .unit-tests-docker
    - .unit-tests-rules
  image: python:3.8
  before_script:
    - *unit-tests-docker-before
    - *unit-tests-template-before

'Py3.9 Docker':
  extends:
    - .unit-tests-template
    - .unit-tests-docker
    - .unit-tests-rules
  image: python:3.9
  before_script:
    - *unit-tests-docker-before
    - *unit-tests-template-before

'Py3.6 Podman':
  extends:
    - .unit-tests-template
    - .unit-tests-podman
    - .unit-tests-rules
  image: python:3.6
  before_script:
    - *unit-tests-podman-before
    - *unit-tests-template-before

'Py3.7 Podman':
  extends:
    - .unit-tests-template
    - .unit-tests-podman
    - .unit-tests-rules
  image: python:3.7
  before_script:
    - *unit-tests-podman-before
    - *unit-tests-template-before

'Py3.8 Podman':
  extends:
    - .unit-tests-template
    - .unit-tests-podman
    - .unit-tests-rules
  image: python:3.8
  before_script:
    - *unit-tests-podman-before
    - *unit-tests-template-before

'Py3.9 Podman':
  extends:
    - .unit-tests-template
    - .unit-tests-podman
    - .unit-tests-rules
  image: python:3.9
  before_script:
    - *unit-tests-podman-before
    - *unit-tests-template-before

'Python Local':
  extends:
    - .unit-tests-template
  image: local:quiet
  before_script:
    - *unit-tests-template-before
  only:
    - local

'Deploy Release':
  stage: deploy
  dependencies:
    - Build
  variables:
    PIP_DISABLE_PIP_VERSION_CHECK: 1
    TWINE_PASSWORD: ${TWINE_PASSWORD}
  before_script:
    - if [ ! "${CI_COMMIT_REF_PROTECTED}" = 'true' ]; then echo '[ERROR] Please protect this tag...'; exit 1; fi
    - pip3 install -q -r requirements/deploy.txt --upgrade
  script:
    - tag=${CI_COMMIT_REF_NAME:-$(git describe --always --abbrev=0)}
    - description=$(sh ./changelog.sh "${tag}" | sed -z 's/"/\\"/g')
    - description="${description}"$'\n\n''### Download'$'\n'
    - gitlab-release --description "${description}" --link-prefix '* ' ./dist/*
    - twine upload -u '__token__' -p "${TWINE_PASSWORD}" ./dist/*
  rules:
    - if: $CI_COMMIT_TAG

'Deploy Trial':
  stage: deploy
  dependencies:
    - Build
  variables:
    PIP_DISABLE_PIP_VERSION_CHECK: 1
    TWINE_PASSWORD_TEST: ${TWINE_PASSWORD_TEST}
  before_script:
    - pip3 install -q -r requirements/deploy.txt --upgrade
  script:
    - twine upload -u '__token__' -p "${TWINE_PASSWORD_TEST}" --repository testpypi ./dist/*
  only:
    - local
  tags:
    - local
  when: manual
