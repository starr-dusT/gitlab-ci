image: python:3

stages:
  - prepare
  - build
  - test
  - deploy

'Changelog':
  stage: prepare
  image: local
  script:
    - set +x
    - mkdir -p ./.tmp/
    - ls ./.tmp/git-chglog >/dev/null 2>&1 || wget -O ./.tmp/git-chglog -q https://github.com/git-chglog/git-chglog/releases/download/0.9.1/git-chglog_linux_amd64
    - chmod +x ./.tmp/git-chglog
    - echo ''
    - 'echo -n " > Current commit : "'
    - git describe --always
    - echo ''
    - 'read -p " > Release tag : " -r tag'
    - git tag -f -m '' "${tag}"
    - ./.tmp/git-chglog -o ./CHANGELOG.md
    - sed -i "s#raw/[^/]*/docs#raw/${tag}/docs#g" ./README.md
    - git add -v ./CHANGELOG.md ./README.md
    - 'git commit -m "CHANGELOG: regenerate release tag changes history"'
    - git tag -f -m '' "${tag}"
    - ./.tmp/git-chglog -o ./CHANGELOG.md
    - git add -v ./CHANGELOG.md
    - git commit --amend --no-edit
    - git tag -f -m '' "${tag}"
  only:
    - local

'Codestyle':
  stage: prepare
  image: local
  script:
    - yapf -i ./docs/*.py ./gitlabci_local/*.py ./setup.py
    - unify -i --quote "'" ./docs/*.py ./gitlabci_local/*.py ./setup.py
  only:
    - local

'Dependencies':
  stage: prepare
  image: local
  script:
    - sudo pip3 install -r requirements-dev.txt --upgrade
    - sudo pip3 install -r requirements.txt --upgrade
  only:
    - local

'Build':
  stage: build
  script:
    - pip3 install -r requirements-dev.txt --upgrade
    - pip3 install -r requirements.txt --upgrade
    - rm -rf build dist *.egg-info .eggs
    - python3 setup.py bdist_wheel
  artifacts:
    paths:
      - dist/

'Development':
  stage: build
  image: local
  script:
    - sudo rm -rf build dist *.egg-info .eggs
    - python3 setup.py bdist_wheel
    - pip3 install --upgrade --no-deps dist/*.whl
  only:
    - local

.unit-tests-template: &unit-tests-template
  stage: test
  timeout: 10m
  services:
    - docker:19.03.5-dind
  variables:
    DOCKER_DRIVER: overlay2
    # DOCKER_HOST: tcp://docker:2375
    FORCE_STYLING: 'true'
    TEMP: .tmp
    TERM: ansi
  before_script:
    - mkdir -p ./.tmp/
    - pip install dist/*.whl
    - pip install --no-deps --upgrade dist/*.whl
  script:
    - pip show gitlabci-local
    - gitlabci-local -h
    - gitlabci-local -c unknown/.gitlab-ci.yml && exit 1 || true
    - gitlabci-local -c ./examples/.gitlab-ci.yml -d
    - gitlabci-local -c ./tests/simple/.gitlab-ci.yml </dev/null && exit 1 || true
    - gitlabci-local -c ./tests/simple/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/simple/.gitlab-ci.yml -q -p
    - gcil -c ./tests/simple/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/unsorted/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/unsorted/.gitlab-ci.yml --all </dev/null
    - gitlabci-local -c ./tests/templates/.gitlab-ci.yml 'Job 1' 'Job 2' 'Job 3'
    - gitlabci-local -B -A -c ./tests/templates/.gitlab-ci.yml 'Job 1' 'Job 2' 'Job 3'
    - gitlabci-local -c ./tests/failures/.gitlab-ci.yml -p && exit 1 || true
    - gitlabci-local -c ./tests/failures/.gitlab-ci.yml 'Job 1' 'Job 2'
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml unknown_job && exit 1 || true
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml -p unknown_stage && exit 1 || true
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml -p && exit 1 || true
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml -p one two
    - gitlabci-local -c ./tests/stages/.gitlab-ci.yml -s -p one two </dev/null
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -m -p && exit 1 || true
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -t 'upload' -p && exit 1 || true
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml 'Job 3'
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -p three && exit 1 || true
    - gitlabci-local -c ./tests/tags/.gitlab-ci.yml -m -p three
    - gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -p && exit 1 || true
    - gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -p </dev/null && exit 1 || true
    - VARIABLE_8=value8 gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -p </dev/null && exit 1 || true
    - VARIABLE_8= VARIABLE_11=value11 gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -p </dev/null
    - gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -e VARIABLE_8=value8 -e VARIABLE_11=value11 -p </dev/null
    - gitlabci-local -c ./tests/configurations/.gitlab-ci.yml -e VARIABLE_8=value8 -e VARIABLE_11=value11 --defaults -p
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -e USER -e VALUE_1=set1 -e VALUE_2=set2 -e VALUE_3=set3 -p
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -e FOLDER=${PWD} -v ./ 'Job 2'
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -v ./:/opt 'Job 2'
    - gitlabci-local -c ./tests/environment/.gitlab-ci.yml -v ./:/opt -w /opt/ 'Job 2'
    - gitlabci-local -c ./tests/entrypoints/.gitlab-ci.yml --pull
    - gitlabci-local -c ./tests/entrypoints/.gitlab-ci.yml -d
    - gitlabci-local -c ./tests/entrypoints/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/retry/.gitlab-ci.yml -p failure && exit 1 || true
    - gitlabci-local -c ./tests/retry/.gitlab-ci.yml -p success
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml 'Job 1'
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -p local_first
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -v ./tests/configurations:/opt/src/tests:ro -p
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -n bridge 'Job 2'
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -n host 'Job 2'
    - gitlabci-local -c ./tests/local/.gitlab-ci.yml -n none 'Job 2'
    - gitlabci-local -c ./tests/includes/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/extends/.gitlab-ci.yml -p
    - gitlabci-local -c ./tests/multilines/.gitlab-ci.yml -p
    - timeout 5 gitlabci-local -c ./tests/simple/.gitlab-ci.yml 'Job 1' --bash && exit 1 || true
    - timeout 5 gitlabci-local -c ./tests/simple/.gitlab-ci.yml 'Job 1' --debug && exit 1 || true
    - gcil -c ./tests/simple/.gitlab-ci.yml Job
    - gcil -c ./tests/simple/.gitlab-ci.yml 1
    - gcil -c ./tests/simple/.gitlab-ci.yml 4 && exit 1 || true

'Py3.6 Docker':
  <<: *unit-tests-template
  image: python:3.6

'Py3.7 Docker':
  <<: *unit-tests-template
  image: python:3.7

'Py3.8 Docker':
  <<: *unit-tests-template
  image: python:3.8

'Py3.8 PodMan':
  <<: *unit-tests-template
  image:
    entrypoint: ['']
    name: mgoltzsche/podman:latest
  services: []
  before_script:
    - mkdir -p ./.tmp/
    - apk add gcc musl-dev py-pip python3 python3-dev
    - pip install dist/*.whl
    - pip install --no-deps --upgrade dist/*.whl
  variables:
    DOCKER_HOST: tcp://localhost:9999

'PyPI Docker':
  <<: *unit-tests-template
  image: python:3.8
  before_script:
    - echo "VERSION=${VERSION:-latest}"
    - pip install "gitlabci-local${VERSION:+==}${VERSION}"
  when: manual

'Python Local':
  <<: *unit-tests-template
  image: local
  only:
    - local

'Deploy Release':
  stage: deploy
  variables:
    TWINE_PASSWORD: ${TWINE_PASSWORD}
  before_script:
    - if [ ! "${CI_COMMIT_REF_PROTECTED}" = 'true' ]; then echo '[ERROR] Please protect this tag...'; exit 1; fi
  script:
    - pip3 install -r requirements-dev.txt --upgrade
    - python3 setup.py bdist_wheel
    - twine upload -u '__token__' -p "${TWINE_PASSWORD}" dist/*
  only:
    - tags
